namespace Z80 {

//----------------------------------------------------------------------------------------------------------------------
// Enumerations
//----------------------------------------------------------------------------------------------------------------------
enum class Z80::CELineID
{
	RD = 1,
	WR
};

//----------------------------------------------------------------------------------------------------------------------
enum class Z80::LineID
{
	Reset = 1,
	BusReq,
	BusAck,
	Int,
	Nmi
};

//----------------------------------------------------------------------------------------------------------------------
enum class Z80::ClockID
{
	Clk = 1
};

//----------------------------------------------------------------------------------------------------------------------
// Structures
//----------------------------------------------------------------------------------------------------------------------
struct Z80::LineAccess
{
	LineAccess(unsigned int alineLD, const Data& astate, double aaccessTime)
	:lineID(alineLD), state(astate), accessTime(aaccessTime), clockRateChange(false)
	{}
	LineAccess(unsigned int alineLD, double aclockRate, double aaccessTime)
	:lineID(alineLD), state(0, 0), clockRate(aclockRate), accessTime(aaccessTime), clockRateChange(true)
	{}

	unsigned int lineID;
	bool clockRateChange;
	double clockRate;
	Data state;
	double accessTime;
};

//----------------------------------------------------------------------------------------------------------------------
struct Z80::CalculateCELineStateContext
{
	CalculateCELineStateContext(bool alineRD, bool alineWR)
	:lineRD(alineRD), lineWR(alineWR)
	{}

	bool lineRD;
	bool lineWR;
};

//----------------------------------------------------------------------------------------------------------------------
// Register functions
//----------------------------------------------------------------------------------------------------------------------
Z80Byte Z80::GetA() const
{
	return Z80Byte(_afreg.GetUpperHalf());
}

//----------------------------------------------------------------------------------------------------------------------
void Z80::GetA(Data& data) const
{
	_afreg.GetUpperHalf(data);
}

//----------------------------------------------------------------------------------------------------------------------
void Z80::SetA(const Z80Byte& data)
{
	_afreg.SetUpperHalf(data);
}

//----------------------------------------------------------------------------------------------------------------------
Z80Byte Z80::GetF() const
{
	return Z80Byte(_afreg.GetLowerHalf());
}

//----------------------------------------------------------------------------------------------------------------------
void Z80::GetF(Data& data) const
{
	_afreg.GetLowerHalf(data);
}

//----------------------------------------------------------------------------------------------------------------------
void Z80::SetF(const Z80Byte& data)
{
	_afreg.SetLowerHalf(data);
}

//----------------------------------------------------------------------------------------------------------------------
Z80Byte Z80::GetB() const
{
	return Z80Byte(_bcreg.GetUpperHalf());
}

//----------------------------------------------------------------------------------------------------------------------
void Z80::GetB(Data& data) const
{
	_bcreg.GetUpperHalf(data);
}

//----------------------------------------------------------------------------------------------------------------------
void Z80::SetB(const Z80Byte& data)
{
	_bcreg.SetUpperHalf(data);
}

//----------------------------------------------------------------------------------------------------------------------
Z80Byte Z80::GetC() const
{
	return Z80Byte(_bcreg.GetLowerHalf());
}

//----------------------------------------------------------------------------------------------------------------------
void Z80::GetC(Data& data) const
{
	_bcreg.GetLowerHalf(data);
}

//----------------------------------------------------------------------------------------------------------------------
void Z80::SetC(const Z80Byte& data)
{
	_bcreg.SetLowerHalf(data);
}

//----------------------------------------------------------------------------------------------------------------------
Z80Byte Z80::GetD() const
{
	return Z80Byte(_dereg.GetUpperHalf());
}

//----------------------------------------------------------------------------------------------------------------------
void Z80::GetD(Data& data) const
{
	_dereg.GetUpperHalf(data);
}

//----------------------------------------------------------------------------------------------------------------------
void Z80::SetD(const Z80Byte& data)
{
	_dereg.SetUpperHalf(data);
}

//----------------------------------------------------------------------------------------------------------------------
Z80Byte Z80::GetE() const
{
	return Z80Byte(_dereg.GetLowerHalf());
}

//----------------------------------------------------------------------------------------------------------------------
void Z80::GetE(Data& data) const
{
	_dereg.GetLowerHalf(data);
}

//----------------------------------------------------------------------------------------------------------------------
void Z80::SetE(const Z80Byte& data)
{
	_dereg.SetLowerHalf(data);
}

//----------------------------------------------------------------------------------------------------------------------
Z80Byte Z80::GetH() const
{
	return Z80Byte(_hlreg.GetUpperHalf());
}

//----------------------------------------------------------------------------------------------------------------------
void Z80::GetH(Data& data) const
{
	_hlreg.GetUpperHalf(data);
}

//----------------------------------------------------------------------------------------------------------------------
void Z80::SetH(const Z80Byte& data)
{
	_hlreg.SetUpperHalf(data);
}

//----------------------------------------------------------------------------------------------------------------------
Z80Byte Z80::GetL() const
{
	return Z80Byte(_hlreg.GetLowerHalf());
}

//----------------------------------------------------------------------------------------------------------------------
void Z80::GetL(Data& data) const
{
	_hlreg.GetLowerHalf(data);
}

//----------------------------------------------------------------------------------------------------------------------
void Z80::SetL(const Z80Byte& data)
{
	_hlreg.SetLowerHalf(data);
}

//----------------------------------------------------------------------------------------------------------------------
Z80Word Z80::GetAF() const
{
	return _afreg;
}

//----------------------------------------------------------------------------------------------------------------------
void Z80::GetAF(Data& data) const
{
	data = _afreg;
}

//----------------------------------------------------------------------------------------------------------------------
void Z80::SetAF(const Z80Word& data)
{
	_afreg = data;
}

//----------------------------------------------------------------------------------------------------------------------
Z80Word Z80::GetBC() const
{
	return _bcreg;
}

//----------------------------------------------------------------------------------------------------------------------
void Z80::GetBC(Data& data) const
{
	data = _bcreg;
}

//----------------------------------------------------------------------------------------------------------------------
void Z80::SetBC(const Z80Word& data)
{
	_bcreg = data;
}

//----------------------------------------------------------------------------------------------------------------------
Z80Word Z80::GetDE() const
{
	return _dereg;
}

//----------------------------------------------------------------------------------------------------------------------
void Z80::GetDE(Data& data) const
{
	data = _dereg;
}

//----------------------------------------------------------------------------------------------------------------------
void Z80::SetDE(const Z80Word& data)
{
	_dereg = data;
}

//----------------------------------------------------------------------------------------------------------------------
Z80Word Z80::GetHL() const
{
	return _hlreg;
}

//----------------------------------------------------------------------------------------------------------------------
void Z80::GetHL(Data& data) const
{
	data = _hlreg;
}

//----------------------------------------------------------------------------------------------------------------------
void Z80::SetHL(const Z80Word& data)
{
	_hlreg = data;
}

//----------------------------------------------------------------------------------------------------------------------
Z80Byte Z80::GetA2() const
{
	return Z80Byte(_af2reg.GetUpperHalf());
}

//----------------------------------------------------------------------------------------------------------------------
void Z80::GetA2(Data& data) const
{
	_af2reg.GetUpperHalf(data);
}

//----------------------------------------------------------------------------------------------------------------------
void Z80::SetA2(const Z80Byte& data)
{
	_af2reg.SetUpperHalf(data);
}

//----------------------------------------------------------------------------------------------------------------------
Z80Byte Z80::GetF2() const
{
	return Z80Byte(_af2reg.GetLowerHalf());
}

//----------------------------------------------------------------------------------------------------------------------
void Z80::GetF2(Data& data) const
{
	_af2reg.GetLowerHalf(data);
}

//----------------------------------------------------------------------------------------------------------------------
void Z80::SetF2(const Z80Byte& data)
{
	_af2reg.SetLowerHalf(data);
}

//----------------------------------------------------------------------------------------------------------------------
Z80Byte Z80::GetB2() const
{
	return Z80Byte(_bc2reg.GetUpperHalf());
}

//----------------------------------------------------------------------------------------------------------------------
void Z80::GetB2(Data& data) const
{
	_bc2reg.GetUpperHalf(data);
}

//----------------------------------------------------------------------------------------------------------------------
void Z80::SetB2(const Z80Byte& data)
{
	_bc2reg.SetUpperHalf(data);
}

//----------------------------------------------------------------------------------------------------------------------
Z80Byte Z80::GetC2() const
{
	return Z80Byte(_bc2reg.GetLowerHalf());
}

//----------------------------------------------------------------------------------------------------------------------
void Z80::GetC2(Data& data) const
{
	_bc2reg.GetLowerHalf(data);
}

//----------------------------------------------------------------------------------------------------------------------
void Z80::SetC2(const Z80Byte& data)
{
	_bc2reg.SetLowerHalf(data);
}

//----------------------------------------------------------------------------------------------------------------------
Z80Byte Z80::GetD2() const
{
	return Z80Byte(_de2reg.GetUpperHalf());
}

//----------------------------------------------------------------------------------------------------------------------
void Z80::GetD2(Data& data) const
{
	_de2reg.GetUpperHalf(data);
}

//----------------------------------------------------------------------------------------------------------------------
void Z80::SetD2(const Z80Byte& data)
{
	_de2reg.SetUpperHalf(data);
}

//----------------------------------------------------------------------------------------------------------------------
Z80Byte Z80::GetE2() const
{
	return Z80Byte(_de2reg.GetLowerHalf());
}

//----------------------------------------------------------------------------------------------------------------------
void Z80::GetE2(Data& data) const
{
	_de2reg.GetLowerHalf(data);
}

//----------------------------------------------------------------------------------------------------------------------
void Z80::SetE2(const Z80Byte& data)
{
	_de2reg.SetLowerHalf(data);
}

//----------------------------------------------------------------------------------------------------------------------
Z80Byte Z80::GetH2() const
{
	return Z80Byte(_hl2reg.GetUpperHalf());
}

//----------------------------------------------------------------------------------------------------------------------
void Z80::GetH2(Data& data) const
{
	_hl2reg.GetUpperBits(data);
}

//----------------------------------------------------------------------------------------------------------------------
void Z80::SetH2(const Z80Byte& data)
{
	_hl2reg.SetUpperBits(data);
}

//----------------------------------------------------------------------------------------------------------------------
Z80Byte Z80::GetL2() const
{
	return Z80Byte(_hl2reg.GetLowerHalf());
}

//----------------------------------------------------------------------------------------------------------------------
void Z80::GetL2(Data& data) const
{
	_hl2reg.GetLowerHalf(data);
}

//----------------------------------------------------------------------------------------------------------------------
void Z80::SetL2(const Z80Byte& data)
{
	_hl2reg.SetLowerHalf(data);
}

//----------------------------------------------------------------------------------------------------------------------
Z80Word Z80::GetAF2() const
{
	return _af2reg;
}

//----------------------------------------------------------------------------------------------------------------------
void Z80::GetAF2(Data& data) const
{
	data = _af2reg;
}

//----------------------------------------------------------------------------------------------------------------------
void Z80::SetAF2(const Z80Word& data)
{
	_af2reg = data;
}

//----------------------------------------------------------------------------------------------------------------------
Z80Word Z80::GetBC2() const
{
	return _bc2reg;
}

//----------------------------------------------------------------------------------------------------------------------
void Z80::GetBC2(Data& data) const
{
	data = _bc2reg;
}

//----------------------------------------------------------------------------------------------------------------------
void Z80::SetBC2(const Z80Word& data)
{
	_bc2reg = data;
}

//----------------------------------------------------------------------------------------------------------------------
Z80Word Z80::GetDE2() const
{
	return _de2reg;
}

//----------------------------------------------------------------------------------------------------------------------
void Z80::GetDE2(Data& data) const
{
	data = _de2reg;
}

//----------------------------------------------------------------------------------------------------------------------
void Z80::SetDE2(const Z80Word& data)
{
	_de2reg = data;
}

//----------------------------------------------------------------------------------------------------------------------
Z80Word Z80::GetHL2() const
{
	return _hl2reg;
}

//----------------------------------------------------------------------------------------------------------------------
void Z80::GetHL2(Data& data) const
{
	data = _hl2reg;
}

//----------------------------------------------------------------------------------------------------------------------
void Z80::SetHL2(const Z80Word& data)
{
	_hl2reg = data;
}

//----------------------------------------------------------------------------------------------------------------------
Z80Byte Z80::GetIXHigh() const
{
	return Z80Byte(_ixreg.GetUpperHalf());
}

//----------------------------------------------------------------------------------------------------------------------
void Z80::GetIXHigh(Data& data) const
{
	_ixreg.GetUpperHalf(data);
}

//----------------------------------------------------------------------------------------------------------------------
void Z80::SetIXHigh(const Z80Byte& data)
{
	_ixreg.SetUpperHalf(data);
}

//----------------------------------------------------------------------------------------------------------------------
Z80Byte Z80::GetIXLow() const
{
	return Z80Byte(_ixreg.GetLowerHalf());
}

//----------------------------------------------------------------------------------------------------------------------
void Z80::GetIXLow(Data& data) const
{
	_ixreg.GetLowerHalf(data);
}

//----------------------------------------------------------------------------------------------------------------------
void Z80::SetIXLow(const Z80Byte& data)
{
	_ixreg.SetLowerHalf(data);
}

//----------------------------------------------------------------------------------------------------------------------
Z80Byte Z80::GetIYHigh() const
{
	return Z80Byte(_iyreg.GetUpperHalf());
}

//----------------------------------------------------------------------------------------------------------------------
void Z80::GetIYHigh(Data& data) const
{
	_iyreg.GetUpperHalf(data);
}

//----------------------------------------------------------------------------------------------------------------------
void Z80::SetIYHigh(const Z80Byte& data)
{
	_iyreg.SetUpperHalf(data);
}

//----------------------------------------------------------------------------------------------------------------------
Z80Byte Z80::GetIYLow() const
{
	return Z80Byte(_iyreg.GetLowerHalf());
}

//----------------------------------------------------------------------------------------------------------------------
void Z80::GetIYLow(Data& data) const
{
	_iyreg.GetLowerHalf(data);
}

//----------------------------------------------------------------------------------------------------------------------
void Z80::SetIYLow(const Z80Byte& data)
{
	_iyreg.SetLowerHalf(data);
}

//----------------------------------------------------------------------------------------------------------------------
Z80Byte Z80::GetI() const
{
	return _ireg;
}

//----------------------------------------------------------------------------------------------------------------------
void Z80::GetI(Data& data) const
{
	data = _ireg;
}

//----------------------------------------------------------------------------------------------------------------------
void Z80::SetI(const Z80Byte& data)
{
	_ireg = data;
}

//----------------------------------------------------------------------------------------------------------------------
Z80Byte Z80::GetR() const
{
	return _rreg;
}

//----------------------------------------------------------------------------------------------------------------------
void Z80::GetR(Data& data) const
{
	data = _rreg;
}

//----------------------------------------------------------------------------------------------------------------------
void Z80::SetR(const Z80Byte& data)
{
	_rreg = data;
}

//----------------------------------------------------------------------------------------------------------------------
Z80Word Z80::GetIX() const
{
	return _ixreg;
}

//----------------------------------------------------------------------------------------------------------------------
void Z80::GetIX(Data& data) const
{
	data = _ixreg;
}

//----------------------------------------------------------------------------------------------------------------------
void Z80::SetIX(const Z80Word& data)
{
	_ixreg = data;
}

//----------------------------------------------------------------------------------------------------------------------
Z80Word Z80::GetIY() const
{
	return _iyreg;
}

//----------------------------------------------------------------------------------------------------------------------
void Z80::GetIY(Data& data) const
{
	data = _iyreg;
}

//----------------------------------------------------------------------------------------------------------------------
void Z80::SetIY(const Z80Word& data)
{
	_iyreg = data;
}

//----------------------------------------------------------------------------------------------------------------------
Z80Word Z80::GetSP() const
{
	return _spreg;
}

//----------------------------------------------------------------------------------------------------------------------
void Z80::GetSP(Data& data) const
{
	data = _spreg;
}

//----------------------------------------------------------------------------------------------------------------------
void Z80::SetSP(const Z80Word& data)
{
	_spreg = data;
}

//----------------------------------------------------------------------------------------------------------------------
Z80Word Z80::GetPC() const
{
	return _pcreg;
}

//----------------------------------------------------------------------------------------------------------------------
void Z80::GetPC(Data& data) const
{
	data = _pcreg;
}

//----------------------------------------------------------------------------------------------------------------------
void Z80::SetPC(const Z80Word& data)
{
	_pcreg = data;
}

//----------------------------------------------------------------------------------------------------------------------
void Z80::AddRefresh(unsigned int increase)
{
	_rreg.SetDataSegment(0, 7, _rreg.GetData() + increase);
}

//----------------------------------------------------------------------------------------------------------------------
// Interrupt register functions
//----------------------------------------------------------------------------------------------------------------------
unsigned int Z80::GetInterruptMode() const
{
	return _interruptMode;
}

//----------------------------------------------------------------------------------------------------------------------
void Z80::SetInterruptMode(unsigned int interruptMode)
{
	_interruptMode = interruptMode % 4;
}

//----------------------------------------------------------------------------------------------------------------------
bool Z80::GetIFF1() const
{
	return _iff1;
}

//----------------------------------------------------------------------------------------------------------------------
void Z80::SetIFF1(bool state)
{
	_iff1 = state;
}

//----------------------------------------------------------------------------------------------------------------------
bool Z80::GetIFF2() const
{
	return _iff2;
}

//----------------------------------------------------------------------------------------------------------------------
void Z80::SetIFF2(bool state)
{
	_iff2 = state;
}

//----------------------------------------------------------------------------------------------------------------------
bool Z80::GetMaskInterruptsNextOpcode() const
{
	return _maskInterruptsNextOpcode;
}

//----------------------------------------------------------------------------------------------------------------------
void Z80::SetMaskInterruptsNextOpcode(bool state)
{
	_maskInterruptsNextOpcode = state;
}

//----------------------------------------------------------------------------------------------------------------------
void Z80::SetProcessorStoppedState(bool state)
{
	_processorStopped = state;
}

//----------------------------------------------------------------------------------------------------------------------
// Flag functions
//	---------------------------------
//	| 7 | 6 | 5 | 4 | 3 | 2 | 1 | 0 |
//	|-------------------------------|
//	| S | Z |*Y | H |*X |P/V| N | C |
//	---------------------------------
//  *Undocumented
//----------------------------------------------------------------------------------------------------------------------
bool Z80::GetFlagS() const
{
	return _afreg.GetBit(7);
}

//----------------------------------------------------------------------------------------------------------------------
void Z80::SetFlagS(bool flag)
{
	_afreg.SetBit(7, flag);
}

//----------------------------------------------------------------------------------------------------------------------
bool Z80::GetFlagZ() const
{
	return _afreg.GetBit(6);
}

//----------------------------------------------------------------------------------------------------------------------
void Z80::SetFlagZ(bool flag)
{
	_afreg.SetBit(6, flag);
}

//----------------------------------------------------------------------------------------------------------------------
bool Z80::GetFlagY() const
{
	return _afreg.GetBit(5);
}

//----------------------------------------------------------------------------------------------------------------------
void Z80::SetFlagY(bool flag)
{
	_afreg.SetBit(5, flag);
}

//----------------------------------------------------------------------------------------------------------------------
bool Z80::GetFlagH() const
{
	return _afreg.GetBit(4);
}

//----------------------------------------------------------------------------------------------------------------------
void Z80::SetFlagH(bool flag)
{
	_afreg.SetBit(4, flag);
}

//----------------------------------------------------------------------------------------------------------------------
bool Z80::GetFlagX() const
{
	return _afreg.GetBit(3);
}

//----------------------------------------------------------------------------------------------------------------------
void Z80::SetFlagX(bool flag)
{
	_afreg.SetBit(3, flag);
}

//----------------------------------------------------------------------------------------------------------------------
bool Z80::GetFlagPV() const
{
	return _afreg.GetBit(2);
}

//----------------------------------------------------------------------------------------------------------------------
void Z80::SetFlagPV(bool flag)
{
	_afreg.SetBit(2, flag);
}

//----------------------------------------------------------------------------------------------------------------------
bool Z80::GetFlagN() const
{
	return _afreg.GetBit(1);
}

//----------------------------------------------------------------------------------------------------------------------
void Z80::SetFlagN(bool flag)
{
	_afreg.SetBit(1, flag);
}

//----------------------------------------------------------------------------------------------------------------------
bool Z80::GetFlagC() const
{
	return _afreg.GetBit(0);
}

//----------------------------------------------------------------------------------------------------------------------
void Z80::SetFlagC(bool flag)
{
	_afreg.SetBit(0, flag);
}

} // Close namespace Z80
